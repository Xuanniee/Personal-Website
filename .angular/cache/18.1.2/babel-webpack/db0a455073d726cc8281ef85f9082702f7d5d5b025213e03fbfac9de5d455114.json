{"ast":null,"code":"import { provideZoneChangeDetection } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { routes } from './app.routes';\nimport { provideClientHydration } from '@angular/platform-browser';\nimport { provideHttpClient, withFetch } from '@angular/common/http';\nexport const appConfig = {\n  providers: [provideZoneChangeDetection({\n    eventCoalescing: true\n  }), provideRouter(routes), provideClientHydration(), provideHttpClient(\n  // Allows us to use Fetch API instead of XMLHttpRequest\n  withFetch())]\n};","map":{"version":3,"names":["provideZoneChangeDetection","provideRouter","routes","provideClientHydration","provideHttpClient","withFetch","appConfig","providers","eventCoalescing"],"sources":["/Users/ngxua/Documents/ComputerScience_Projects/Personal-Website/src/app/app.config.ts"],"sourcesContent":["import { ApplicationConfig, provideZoneChangeDetection } from '@angular/core';\nimport { provideRouter } from '@angular/router';\n\nimport { routes } from './app.routes';\nimport { provideClientHydration } from '@angular/platform-browser';\nimport { provideHttpClient, withFetch } from '@angular/common/http';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }), \n    provideRouter(routes), \n    provideClientHydration(),\n    provideHttpClient(\n      // Allows us to use Fetch API instead of XMLHttpRequest\n      withFetch()\n    )\n  ]\n};\n"],"mappings":"AAAA,SAA4BA,0BAA0B,QAAQ,eAAe;AAC7E,SAASC,aAAa,QAAQ,iBAAiB;AAE/C,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,sBAAsB,QAAQ,2BAA2B;AAClE,SAASC,iBAAiB,EAAEC,SAAS,QAAQ,sBAAsB;AAEnE,OAAO,MAAMC,SAAS,GAAsB;EAC1CC,SAAS,EAAE,CACTP,0BAA0B,CAAC;IAAEQ,eAAe,EAAE;EAAI,CAAE,CAAC,EACrDP,aAAa,CAACC,MAAM,CAAC,EACrBC,sBAAsB,EAAE,EACxBC,iBAAiB;EACf;EACAC,SAAS,EAAE,CACZ;CAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}